pipeline {
    agent any

    environment {
        JAVA_HOME = '/usr/lib/jvm/java-21-openjdk'  // Update this path for your Java installation
        PATH = "${JAVA_HOME}/bin:${env.PATH}"      // Add Java bin to the PATH
    }

    tools {
        jdk 'jdk-21'   // Ensure JDK 21 is configured in Jenkins Global Tool Configuration
        maven 'MAVEN_DEV' // Replace with your configured Maven installation
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'feature/DevOps-branch', 
                    credentialsId: 'github_credentials', 
                    url: 'https://github.com/Kem123123/oauth-service.git'
            }
        }

        stage('Build Application') {
            steps {
                // Verify Java version
                sh 'java -version' // Confirm JDK 21 is being used
                
                // Build the application with Maven
                sh 'mvn clean package -DskipTests'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build Docker image
                    sh 'docker build -t ${IMAGE_NAME}:${IMAGE_TAG} .'
                }
            }
        }

        stage('Archive Artifact') {
            steps {
                // Archive the JAR file
                archiveArtifacts artifacts: 'target/*.jar', fingerprint: true
            }
        }

        stage('Deploy to EC2') {
            steps {
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: AWS_CREDENTIALS_ID]]) {
                    sh """
                    scp -o StrictHostKeyChecking=no target/${APP_JAR_NAME} ${EC2_USER}@${EC2_HOST}:/home/ubuntu/${APP_JAR_NAME}
                    ssh -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} "nohup java -jar /home/ubuntu/${APP_JAR_NAME} > /dev/null 2>&1 &"
                    """
                }
            }
        }
    }

    post {
        success {
            echo 'Deployment successful!'
        }
        failure {
            echo 'Deployment failed.'
        }
    }
}
