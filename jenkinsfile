pipeline {
    agent any
    
    environment {
        JAVA_HOME = '/usr/lib/jvm/java-21-openjdk'
        MAVEN_HOME = '/usr/share/maven'
        PATH = "${JAVA_HOME}/bin:${MAVEN_HOME}/bin:${env.PATH}"
        AWS_ACCESS_KEY_ID = credentials('aws-access-key-id') // Set your AWS credentials
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret-access-key') // Set your AWS credentials
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the latest code from the Git repository
                checkout scm
            }
        }

        stage('Set up AWS CLI') {
            steps {
                script {
                    // Configure AWS CLI (if needed)
                    sh 'aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID'
                    sh 'aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY'
                    sh 'aws configure set region us-east-1' // Change to your region
                }
            }
        }

        stage('Build Project') {
            steps {
                script {
                    // Ensure that Maven is properly set up
                    sh 'mvn clean package -DskipTests'
                }
            }
        }

        stage('Deploy to AWS') {
            steps {
                script {
                    // Example: Deploying to AWS Elastic Beanstalk
                    // Modify this to suit your AWS deployment requirements
                    sh 'aws elasticbeanstalk create-application-version --application-name YourApp --version-label v1 --source-bundle S3Bucket=your-bucket,S3Key=your-app-v1.zip'
                    sh 'aws elasticbeanstalk update-environment --application-name YourApp --environment-name YourEnv --version-label v1'
                }
            }
        }

        stage('Notify') {
            steps {
                script {
                    // Notify upon successful or failed execution (can be an email, Slack, etc.)
                    echo 'Deployment Complete'
                }
            }
        }
    }
    
    post {
        always {
            // Actions to perform after pipeline execution, like cleaning up
            echo 'Pipeline execution completed.'
        }
    }
}
