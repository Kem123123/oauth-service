pipeline {
    agent any

    environment {
        // Define the JAVA_HOME and MAVEN_HOME paths
        JAVA_HOME = '/usr/lib/jvm/java-21-openjdk'  // Path to JDK 21
        MAVEN_HOME = '/usr/share/maven'  // Adjust this path based on where Maven is installed on your system
        PATH = "${JAVA_HOME}/bin:${MAVEN_HOME}/bin:${env.PATH}"  // Update PATH to include JDK and Maven binaries
        
        // Define other environment variables
        EC2_USER = 'ubuntu'                        // EC2 username
        EC2_HOST = '52.20.211.65'                  // EC2 instance IP
        APP_PORT = '8080'                          // Application port
        SSH_KEY_CREDENTIALS_ID = 'jenkins_ssh_key' // ID of the SSH key stored in Jenkins credentials
        APP_JAR_NAME = 'spring-boot-app-3.1.2.jar' // Correct JAR file name (adjust as needed)
        IMAGE_NAME = 'spring-boot-app'             // Docker image name
        IMAGE_TAG = 'latest'                       // Docker image tag
        AWS_CREDENTIALS_ID = 'AWS_credentials'    // Jenkins AWS credentials ID (configure AWS credentials in Jenkins)
    }

    tools {
        jdk 'jdk-21'   // Use the name configured in Jenkins Global Tool Configuration for JDK 21
        maven 'MAVEN_DEV' // Use the Maven tool configured in Jenkins Global Tool Configuration
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'feature/DevOps-branch', 
                    credentialsId: 'github_credentials', 
                    url: 'https://github.com/Kem123123/oauth-service.git'  // Update this to your repository
            }
        }

        stage('Build Application') {
            steps {
                // Verify Java version
                sh 'java -version' // Confirm JDK 21 is being used
                
                // Build the application with Maven
                sh 'mvn clean package -DskipTests'
            }
        }

       
